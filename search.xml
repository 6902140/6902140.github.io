<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>leetcode-2023-11.22</title>
    <url>/2023/11/22/leetcode-2023-11-22/</url>
    <content><![CDATA[<h1 id="leetcode日常2023-11-22"><a href="#leetcode日常2023-11-22" class="headerlink" title="leetcode日常2023.11.22"></a><code>leetcode</code>日常2023.11.22</h1><p>题目链接在这里<a href="https://leetcode.cn/problems/number-of-islands/description/?envType=study-plan-v2&envId=top-100-liked">click here</a></p>
<p>给你一个由 <code>&#39;1&#39;</code>（陆地）和 <code>&#39;0&#39;</code>（水）组成的的二维网格，请你计算网格中岛屿的数量。</p>
<p>岛屿总是被水包围，并且每座岛屿只能由水平方向和&#x2F;或竖直方向上相邻的陆地连接形成。</p>
<p>此外，你可以假设该网格的四条边均被水包围。</p>
<p><strong>示例 1：</strong></p>
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">输入：grid = [</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>]</span><br><span class="line">]</span><br><span class="line">输出：<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p><strong>示例 2：</strong></p>
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">输入：grid = [</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;1&quot;</span>]</span><br><span class="line">]</span><br><span class="line">输出：<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p><strong>提示：</strong></p>
<ul>
<li><code>m == grid.length</code></li>
<li><code>n == grid[i].length</code></li>
<li><code>1 &lt;= m, n &lt;= 300</code></li>
<li><code>grid[i][j]</code> 的值为 <code>&#39;0&#39;</code> 或 <code>&#39;1&#39;</code></li>
</ul>
<h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="comment">#简单的dfs遍历来确定一个岛屿所有陆地</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dfs_kill</span>(<span class="params">self,i:<span class="built_in">int</span>,j:<span class="built_in">int</span>,grid:<span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> grid[i][j]==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        leny=<span class="built_in">len</span>(grid)</span><br><span class="line">        lenx=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        grid[i][j]=<span class="string">&#x27;2&#x27;</span><span class="comment">#已经遍历过的陆地就标记为2</span></span><br><span class="line">        <span class="keyword">if</span> i-<span class="number">1</span>&gt;=<span class="number">0</span>:</span><br><span class="line">            self.dfs_kill(i-<span class="number">1</span>,j,grid)</span><br><span class="line">        <span class="keyword">if</span> i+<span class="number">1</span>&lt;leny:</span><br><span class="line">            self.dfs_kill(i+<span class="number">1</span>,j,grid)</span><br><span class="line">        <span class="keyword">if</span> j-<span class="number">1</span>&gt;=<span class="number">0</span>:</span><br><span class="line">            self.dfs_kill(i,j-<span class="number">1</span>,grid)</span><br><span class="line">        <span class="keyword">if</span> j+<span class="number">1</span>&lt;lenx:</span><br><span class="line">            self.dfs_kill(i,j+<span class="number">1</span>,grid)</span><br><span class="line">     </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numIslands</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">str</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        leny=<span class="built_in">len</span>(grid)</span><br><span class="line">        lenx=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,leny):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,lenx):</span><br><span class="line">                <span class="keyword">if</span> grid[i][j]==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                    res+=<span class="number">1</span></span><br><span class="line">                    self.dfs_kill(i,j,grid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>苦逼开发日常</category>
      </categories>
      <tags>
        <tag>daily algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro 深度学习开发环境配置</title>
    <url>/2023/11/21/manjaro%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文主要记录 linux 系统 (manjaro) 双显卡 (Intel 集显 + Nvidia 独显) 的驱动安装以及 cuda 的安装细节。</p>
<h2 id="（1）manjaro双显卡驱动安装以及配置"><a href="#（1）manjaro双显卡驱动安装以及配置" class="headerlink" title="（1）manjaro双显卡驱动安装以及配置"></a>（1）<code>manjaro</code>双显卡驱动安装以及配置</h2><p>首先在安装manjaro时应该选择Install Proprietary Diver 安装闭源驱动。<br>看到以下输出则说明闭源驱动安装成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mhwd -li</span><br><span class="line">&gt; Installed PCI configs:</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">                  NAME               VERSION          FREEDRIVER           TYPE</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">video-hybrid-amd-nvidia-prime            2023.03.23               <span class="literal">false</span>            PCI</span><br><span class="line">           video-linux            2018.05.04                <span class="literal">true</span>            PCI</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>安装必要插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S linux&lt;内核版本（比如说54）&gt;-headers acpi_call-dkms xorg-xrandr xf86-video-intel git</span><br></pre></td></tr></table></figure>
<p>克隆github项目到本地</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#从github克隆</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/dglt1/optimus-switch-sddm.git </span><br><span class="line"><span class="built_in">cd</span> ~/optimus-switch-sddm  <span class="comment"># 切换到插件文件夹</span></span><br><span class="line"><span class="built_in">chmod</span> +x install.sh	      <span class="comment"># 给安装程序添加权限</span></span><br><span class="line">sudo ./install.sh	      <span class="comment"># 安装插件</span></span><br></pre></td></tr></table></figure>

<p>自由切换显卡模式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用Intel核显</span></span><br><span class="line">sudo set-intel.sh</span><br><span class="line"><span class="comment"># 启用Nvidia-Prime</span></span><br><span class="line">sudo set-nvidia.sh</span><br></pre></td></tr></table></figure>

<h2 id="（2）安装cuda"><a href="#（2）安装cuda" class="headerlink" title="（2）安装cuda"></a>（2）安装<code>cuda</code></h2><p>一键安装<code>cuda</code> <code>cudnn</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S cuda cudnn <span class="comment">#一键安装</span></span><br><span class="line"><span class="comment">#我的安装目录在/opt/cuda/bin</span></span><br></pre></td></tr></table></figure>
<p>需要修改环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/opt/cuda/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>测试安装是否成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> $ nvcc -V</span><br><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class="line">Copyright (c) 2005-2023 NVIDIA Corporation</span><br><span class="line">Built on Fri_Sep__8_19:17:24_PDT_2023</span><br><span class="line">Cuda compilation tools, release 12.3, V12.3.52</span><br><span class="line">Build cuda_12.3.r12.3/compiler.33281558_0</span><br></pre></td></tr></table></figure>

<h3 id="（3）安装pytorch依赖"><a href="#（3）安装pytorch依赖" class="headerlink" title="（3）安装pytorch依赖"></a>（3）安装<code>pytorch</code>依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install torch torchvision </span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试GPU加速是否可用</span></span><br><span class="line">(DL) kaneki@Manjaro:/opt/cuda/bin </span><br><span class="line"> $ python</span><br><span class="line">Python 3.8.18 (default, Sep 11 2023, 13:40:15) </span><br><span class="line">[GCC 11.2.0] :: Anaconda, Inc. on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import torch</span><br><span class="line">&gt;&gt;&gt; torch.cuda.is_available()</span><br><span class="line">True</span><br><span class="line"><span class="comment"># 返回True则说明安装成功</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p><a href="https://www.cnblogs.com/IICaesar/p/13262652.html">manjaro双显卡快捷切换 (click here)</a></p>
<p><a href="http://home.ustc.edu.cn/~liujunyan/blog/Linux-manjaro-%E4%B8%8B%E5%8F%8C%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Acuda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">pytorch配置  (click here)</a></p>
]]></content>
      <categories>
        <category>苦逼开发日常</category>
      </categories>
      <tags>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>小站诞生</title>
    <url>/2023/11/20/start-my-website/</url>
    <content><![CDATA[<p>这个小站是<code>Zhuiri Xiao</code>@<code>xjtu</code>于2023.11.20日基于<code>hexo</code>创建的托管于<code>github</code>平台的个人博客;</p>
<p>主要会用于记录个人生活以及学习笔记。</p>
<h2 id="小站的诞生"><a href="#小站的诞生" class="headerlink" title="小站的诞生"></a>小站的诞生</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line"><span class="comment">#如果您没有代理 可以参考以下命令设置npm代理</span></span><br><span class="line">$ npm config <span class="built_in">set</span> registry http://mirrors.cloud.tencent.com/npm/</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>使用npm安装<code>hexo</code></p>
<h3 id="初始化blog项目"><a href="#初始化blog项目" class="headerlink" title="初始化blog项目"></a>初始化blog项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init ‘你的blog根目录名字’</span><br><span class="line"><span class="built_in">cd</span> ‘项目根目录’</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>


<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g <span class="comment">#产生静态文件</span></span><br><span class="line">$ hexo server <span class="comment">#在本地运行</span></span><br></pre></td></tr></table></figure>

<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><p>首先需要在<code>_config.yml</code>中配置<code>部署</code>选项：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/6902140/6902140.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">ghp_R1UBIUcdc21m9WFZOy9wX6loJ39J9c30nrBB</span></span><br><span class="line"><span class="comment"># ————————————————</span></span><br><span class="line"><span class="comment"># 参考链接：https://blog.csdn.net/yaorongke/article/details/119089190</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<h3 id="新增文章："><a href="#新增文章：" class="headerlink" title="新增文章："></a>新增文章：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My-New-Post&quot;</span></span><br><span class="line"><span class="comment">#then writting and re-generate and deploy</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>苦逼开发日常</category>
      </categories>
      <tags>
        <tag>daily-dev</tag>
      </tags>
  </entry>
</search>
